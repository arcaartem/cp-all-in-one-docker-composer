---
version: '2'
services:
  <%- @zookeeper_ensemble.each_with_index do |member, index| -%>
  <%= member[:name] %>:
    image: confluentinc/cp-zookeeper:7.3.3
    hostname: <%= member[:name] %>
    container_name: <%= member[:name] %>
    ports:
      - "<%= member[:port] %>:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: <%= index + 1 %>
      ZOOKEEPER_SERVERS: <%= @zookeeper_ensemble.map { |m| "#{m[:name]}:2888:3888" }.join(';') %>
      ZOOKEEPER_TICK_TIME: 2000

  <%- end -%>
  <%- @broker_cluster.each do |member| -%>
  <%= member[:name] %>:
    image: confluentinc/cp-server:7.3.3
    hostname: <%= member[:name] %>
    container_name: <%= member[:name] %>
    depends_on:
    <%- @zookeeper_ensemble.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
    ports:
      - "<%= member[:port] %>:9092"
      - "<%= member[:jmx_port] %>:9101"
    environment:
      KAFKA_BROKER_ID: <%= member[:id] %>
      KAFKA_ZOOKEEPER_CONNECT: '<%= @zookeeper_ensemble.map { |member| "#{member[:name]}:2181" }.join(',')%>'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://<%= member[:name] %>:29092,PLAINTEXT_HOST://localhost:<%= member[:port] %>
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: <%= @broker_cluster.length %>
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_BROKER_RACK: rack-<%= member[:id] %>
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: <%= member[:name] %>:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  <%- end -%>
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.3
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: '<%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: cnfldemos/cp-server-connect-datagen:0.6.0-7.3.0
    hostname: connect
    container_name: connect
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: '<%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.3.3.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.3
    hostname: control-center
    container_name: control-center
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: '<%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.3.3
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "<%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:7.3.3
    container_name: ksqldb-cli
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    image: confluentinc/ksqldb-examples:7.3.3
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - ksqldb-server
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - schema-registry
      - connect
    command: "bash -c '\
                      <%- @broker_cluster.each_with_index do |member, index| -%>
                       echo Waiting for Kafka Broker <%= index + 1 %> to be ready... && \
                       cub kafka-ready -b <%= member[:name] %>:29092 1 40 && \
                      <%- end -%>
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: <%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.3.3
    depends_on:
    <%- @broker_cluster.each do |member| -%>
      - <%= member[:name] %>
    <%- end -%>
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: '<%= @broker_cluster.map { |member| "#{member[:name]}:29092" }.join(',') %>'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
